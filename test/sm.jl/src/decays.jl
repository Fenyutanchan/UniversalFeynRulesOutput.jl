module  Decays

using   ..Objects

export  all_decays

import  ..Particles


Decay_H = Decay(name = "Decay_H", particle = Particles.H, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.W__plus__) => "(((3*ee^4*vev^2)/(4. *sw^4) + (ee^4*MH^4*vev^2)/(16. *MW^4*sw^4) - (ee^4*MH^2*vev^2)/(4. *MW^2*sw^4))*sqrt(MH^4 - 4*MH^2*MW^2))/(16. *pi*abs(MH)^3)", (Particles.Z, Particles.Z) => "(((9*ee^4*vev^2)/2. + (3*ee^4*MH^4*vev^2)/(8. *MZ^4) - (3*ee^4*MH^2*vev^2)/(2. *MZ^2) + (3*cw^4*ee^4*vev^2)/(4. *sw^4) + (cw^4*ee^4*MH^4*vev^2)/(16. *MZ^4*sw^4) - (cw^4*ee^4*MH^2*vev^2)/(4. *MZ^2*sw^4) + (3*cw^2*ee^4*vev^2)/sw^2 + (cw^2*ee^4*MH^4*vev^2)/(4. *MZ^4*sw^2) - (cw^2*ee^4*MH^2*vev^2)/(MZ^2*sw^2) + (3*ee^4*sw^2*vev^2)/cw^2 + (ee^4*MH^4*sw^2*vev^2)/(4. *cw^2*MZ^4) - (ee^4*MH^2*sw^2*vev^2)/(cw^2*MZ^2) + (3*ee^4*sw^4*vev^2)/(4. *cw^4) + (ee^4*MH^4*sw^4*vev^2)/(16. *cw^4*MZ^4) - (ee^4*MH^2*sw^4*vev^2)/(4. *cw^4*MZ^2))*sqrt(MH^4 - 4*MH^2*MZ^2))/(32. *pi*abs(MH)^3)", (Particles.b, Particles.b__tilde__) => "((-12*MB^2*yb^2 + 3*MH^2*yb^2)*sqrt(-4*MB^2*MH^2 + MH^4))/(16. *pi*abs(MH)^3)", (Particles.e__minus__, Particles.e__plus__) => "((-4*Me^2*ye^2 + MH^2*ye^2)*sqrt(-4*Me^2*MH^2 + MH^4))/(16. *pi*abs(MH)^3)", (Particles.mu__minus__, Particles.mu__plus__) => "((MH^2*ym^2 - 4*MM^2*ym^2)*sqrt(MH^4 - 4*MH^2*MM^2))/(16. *pi*abs(MH)^3)", (Particles.ta__minus__, Particles.ta__plus__) => "((MH^2*ytau^2 - 4*MTA^2*ytau^2)*sqrt(MH^4 - 4*MH^2*MTA^2))/(16. *pi*abs(MH)^3)", (Particles.c, Particles.c__tilde__) => "((-12*MC^2*yc^2 + 3*MH^2*yc^2)*sqrt(-4*MC^2*MH^2 + MH^4))/(16. *pi*abs(MH)^3)", (Particles.t, Particles.t__tilde__) => "((3*MH^2*yt^2 - 12*MT^2*yt^2)*sqrt(MH^4 - 4*MH^2*MT^2))/(16. *pi*abs(MH)^3)"))
Decay_Z = Decay(name = "Decay_Z", particle = Particles.Z, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.W__plus__) => "(((-12*cw^2*ee^2*MW^2)/sw^2 - (17*cw^2*ee^2*MZ^2)/sw^2 + (4*cw^2*ee^2*MZ^4)/(MW^2*sw^2) + (cw^2*ee^2*MZ^6)/(4. *MW^4*sw^2))*sqrt(-4*MW^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.d, Particles.d__tilde__) => "(MZ^2*(ee^2*MZ^2 + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) + (5*ee^2*MZ^2*sw^2)/(6. *cw^2)))/(48. *pi*abs(MZ)^3)", (Particles.s, Particles.s__tilde__) => "(MZ^2*(ee^2*MZ^2 + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) + (5*ee^2*MZ^2*sw^2)/(6. *cw^2)))/(48. *pi*abs(MZ)^3)", (Particles.b, Particles.b__tilde__) => "((-7*ee^2*MB^2 + ee^2*MZ^2 - (3*cw^2*ee^2*MB^2)/(2. *sw^2) + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) - (17*ee^2*MB^2*sw^2)/(6. *cw^2) + (5*ee^2*MZ^2*sw^2)/(6. *cw^2))*sqrt(-4*MB^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.e__minus__, Particles.e__plus__) => "((-5*ee^2*Me^2 - ee^2*MZ^2 - (cw^2*ee^2*Me^2)/(2. *sw^2) + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (7*ee^2*Me^2*sw^2)/(2. *cw^2) + (5*ee^2*MZ^2*sw^2)/(2. *cw^2))*sqrt(-4*Me^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.mu__minus__, Particles.mu__plus__) => "((-5*ee^2*MM^2 - ee^2*MZ^2 - (cw^2*ee^2*MM^2)/(2. *sw^2) + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (7*ee^2*MM^2*sw^2)/(2. *cw^2) + (5*ee^2*MZ^2*sw^2)/(2. *cw^2))*sqrt(-4*MM^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.ta__minus__, Particles.ta__plus__) => "((-5*ee^2*MTA^2 - ee^2*MZ^2 - (cw^2*ee^2*MTA^2)/(2. *sw^2) + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (7*ee^2*MTA^2*sw^2)/(2. *cw^2) + (5*ee^2*MZ^2*sw^2)/(2. *cw^2))*sqrt(-4*MTA^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.u, Particles.u__tilde__) => "(MZ^2*(-(ee^2*MZ^2) + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) + (17*ee^2*MZ^2*sw^2)/(6. *cw^2)))/(48. *pi*abs(MZ)^3)", (Particles.c, Particles.c__tilde__) => "((-11*ee^2*MC^2 - ee^2*MZ^2 - (3*cw^2*ee^2*MC^2)/(2. *sw^2) + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) + (7*ee^2*MC^2*sw^2)/(6. *cw^2) + (17*ee^2*MZ^2*sw^2)/(6. *cw^2))*sqrt(-4*MC^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.t, Particles.t__tilde__) => "((-11*ee^2*MT^2 - ee^2*MZ^2 - (3*cw^2*ee^2*MT^2)/(2. *sw^2) + (3*cw^2*ee^2*MZ^2)/(2. *sw^2) + (7*ee^2*MT^2*sw^2)/(6. *cw^2) + (17*ee^2*MZ^2*sw^2)/(6. *cw^2))*sqrt(-4*MT^2*MZ^2 + MZ^4))/(48. *pi*abs(MZ)^3)", (Particles.ve, Particles.ve__tilde__) => "(MZ^2*(ee^2*MZ^2 + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (ee^2*MZ^2*sw^2)/(2. *cw^2)))/(48. *pi*abs(MZ)^3)", (Particles.vm, Particles.vm__tilde__) => "(MZ^2*(ee^2*MZ^2 + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (ee^2*MZ^2*sw^2)/(2. *cw^2)))/(48. *pi*abs(MZ)^3)", (Particles.vt, Particles.vt__tilde__) => "(MZ^2*(ee^2*MZ^2 + (cw^2*ee^2*MZ^2)/(2. *sw^2) + (ee^2*MZ^2*sw^2)/(2. *cw^2)))/(48. *pi*abs(MZ)^3)"))
Decay_c = Decay(name = "Decay_c", particle = Particles.c, partial_widths = Dict{Tuple, String}((Particles.W__plus__, Particles.d) => "((MC^2 - MW^2)*((3*CKM2x1*ee^2*MC^2*conj(CKM2x1))/(2. *sw^2) + (3*CKM2x1*ee^2*MC^4*conj(CKM2x1))/(2. *MW^2*sw^2) - (3*CKM2x1*ee^2*MW^2*conj(CKM2x1))/sw^2))/(96. *pi*abs(MC)^3)", (Particles.W__plus__, Particles.s) => "((MC^2 - MW^2)*((3*CKM2x2*ee^2*MC^2*conj(CKM2x2))/(2. *sw^2) + (3*CKM2x2*ee^2*MC^4*conj(CKM2x2))/(2. *MW^2*sw^2) - (3*CKM2x2*ee^2*MW^2*conj(CKM2x2))/sw^2))/(96. *pi*abs(MC)^3)", (Particles.W__plus__, Particles.b) => "(((3*CKM2x3*ee^2*MB^2*conj(CKM2x3))/(2. *sw^2) + (3*CKM2x3*ee^2*MC^2*conj(CKM2x3))/(2. *sw^2) + (3*CKM2x3*ee^2*MB^4*conj(CKM2x3))/(2. *MW^2*sw^2) - (3*CKM2x3*ee^2*MB^2*MC^2*conj(CKM2x3))/(MW^2*sw^2) + (3*CKM2x3*ee^2*MC^4*conj(CKM2x3))/(2. *MW^2*sw^2) - (3*CKM2x3*ee^2*MW^2*conj(CKM2x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MC^2 + MC^4 - 2*MB^2*MW^2 - 2*MC^2*MW^2 + MW^4))/(96. *pi*abs(MC)^3)"))
Decay_t = Decay(name = "Decay_t", particle = Particles.t, partial_widths = Dict{Tuple, String}((Particles.W__plus__, Particles.d) => "((MT^2 - MW^2)*((3*CKM3x1*ee^2*MT^2*conj(CKM3x1))/(2. *sw^2) + (3*CKM3x1*ee^2*MT^4*conj(CKM3x1))/(2. *MW^2*sw^2) - (3*CKM3x1*ee^2*MW^2*conj(CKM3x1))/sw^2))/(96. *pi*abs(MT)^3)", (Particles.W__plus__, Particles.s) => "((MT^2 - MW^2)*((3*CKM3x2*ee^2*MT^2*conj(CKM3x2))/(2. *sw^2) + (3*CKM3x2*ee^2*MT^4*conj(CKM3x2))/(2. *MW^2*sw^2) - (3*CKM3x2*ee^2*MW^2*conj(CKM3x2))/sw^2))/(96. *pi*abs(MT)^3)", (Particles.W__plus__, Particles.b) => "(((3*CKM3x3*ee^2*MB^2*conj(CKM3x3))/(2. *sw^2) + (3*CKM3x3*ee^2*MT^2*conj(CKM3x3))/(2. *sw^2) + (3*CKM3x3*ee^2*MB^4*conj(CKM3x3))/(2. *MW^2*sw^2) - (3*CKM3x3*ee^2*MB^2*MT^2*conj(CKM3x3))/(MW^2*sw^2) + (3*CKM3x3*ee^2*MT^4*conj(CKM3x3))/(2. *MW^2*sw^2) - (3*CKM3x3*ee^2*MW^2*conj(CKM3x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MT^2 + MT^4 - 2*MB^2*MW^2 - 2*MT^2*MW^2 + MW^4))/(96. *pi*abs(MT)^3)"))
Decay_W__plus__ = Decay(name = "Decay_W__plus__", particle = Particles.W__plus__, partial_widths = Dict{Tuple, String}((Particles.u, Particles.d__tilde__) => "(CKM1x1*ee^2*MW^4*conj(CKM1x1))/(16. *pi*sw^2*abs(MW)^3)", (Particles.u, Particles.s__tilde__) => "(CKM1x2*ee^2*MW^4*conj(CKM1x2))/(16. *pi*sw^2*abs(MW)^3)", (Particles.u, Particles.b__tilde__) => "((-MB^2 + MW^2)*((-3*CKM1x3*ee^2*MB^2*conj(CKM1x3))/(2. *sw^2) - (3*CKM1x3*ee^2*MB^4*conj(CKM1x3))/(2. *MW^2*sw^2) + (3*CKM1x3*ee^2*MW^2*conj(CKM1x3))/sw^2))/(48. *pi*abs(MW)^3)", (Particles.c, Particles.d__tilde__) => "((-MC^2 + MW^2)*((-3*CKM2x1*ee^2*MC^2*conj(CKM2x1))/(2. *sw^2) - (3*CKM2x1*ee^2*MC^4*conj(CKM2x1))/(2. *MW^2*sw^2) + (3*CKM2x1*ee^2*MW^2*conj(CKM2x1))/sw^2))/(48. *pi*abs(MW)^3)", (Particles.c, Particles.s__tilde__) => "((-MC^2 + MW^2)*((-3*CKM2x2*ee^2*MC^2*conj(CKM2x2))/(2. *sw^2) - (3*CKM2x2*ee^2*MC^4*conj(CKM2x2))/(2. *MW^2*sw^2) + (3*CKM2x2*ee^2*MW^2*conj(CKM2x2))/sw^2))/(48. *pi*abs(MW)^3)", (Particles.c, Particles.b__tilde__) => "(((-3*CKM2x3*ee^2*MB^2*conj(CKM2x3))/(2. *sw^2) - (3*CKM2x3*ee^2*MC^2*conj(CKM2x3))/(2. *sw^2) - (3*CKM2x3*ee^2*MB^4*conj(CKM2x3))/(2. *MW^2*sw^2) + (3*CKM2x3*ee^2*MB^2*MC^2*conj(CKM2x3))/(MW^2*sw^2) - (3*CKM2x3*ee^2*MC^4*conj(CKM2x3))/(2. *MW^2*sw^2) + (3*CKM2x3*ee^2*MW^2*conj(CKM2x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MC^2 + MC^4 - 2*MB^2*MW^2 - 2*MC^2*MW^2 + MW^4))/(48. *pi*abs(MW)^3)", (Particles.t, Particles.d__tilde__) => "((-MT^2 + MW^2)*((-3*CKM3x1*ee^2*MT^2*conj(CKM3x1))/(2. *sw^2) - (3*CKM3x1*ee^2*MT^4*conj(CKM3x1))/(2. *MW^2*sw^2) + (3*CKM3x1*ee^2*MW^2*conj(CKM3x1))/sw^2))/(48. *pi*abs(MW)^3)", (Particles.t, Particles.s__tilde__) => "((-MT^2 + MW^2)*((-3*CKM3x2*ee^2*MT^2*conj(CKM3x2))/(2. *sw^2) - (3*CKM3x2*ee^2*MT^4*conj(CKM3x2))/(2. *MW^2*sw^2) + (3*CKM3x2*ee^2*MW^2*conj(CKM3x2))/sw^2))/(48. *pi*abs(MW)^3)", (Particles.t, Particles.b__tilde__) => "(((-3*CKM3x3*ee^2*MB^2*conj(CKM3x3))/(2. *sw^2) - (3*CKM3x3*ee^2*MT^2*conj(CKM3x3))/(2. *sw^2) - (3*CKM3x3*ee^2*MB^4*conj(CKM3x3))/(2. *MW^2*sw^2) + (3*CKM3x3*ee^2*MB^2*MT^2*conj(CKM3x3))/(MW^2*sw^2) - (3*CKM3x3*ee^2*MT^4*conj(CKM3x3))/(2. *MW^2*sw^2) + (3*CKM3x3*ee^2*MW^2*conj(CKM3x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MT^2 + MT^4 - 2*MB^2*MW^2 - 2*MT^2*MW^2 + MW^4))/(48. *pi*abs(MW)^3)", (Particles.ve, Particles.e__plus__) => "((-Me^2 + MW^2)*(-(ee^2*Me^2)/(2. *sw^2) - (ee^2*Me^4)/(2. *MW^2*sw^2) + (ee^2*MW^2)/sw^2))/(48. *pi*abs(MW)^3)", (Particles.vm, Particles.mu__plus__) => "((-MM^2 + MW^2)*(-(ee^2*MM^2)/(2. *sw^2) - (ee^2*MM^4)/(2. *MW^2*sw^2) + (ee^2*MW^2)/sw^2))/(48. *pi*abs(MW)^3)", (Particles.vt, Particles.ta__plus__) => "((-MTA^2 + MW^2)*(-(ee^2*MTA^2)/(2. *sw^2) - (ee^2*MTA^4)/(2. *MW^2*sw^2) + (ee^2*MW^2)/sw^2))/(48. *pi*abs(MW)^3)"))
Decay_b = Decay(name = "Decay_b", particle = Particles.b, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.u) => "((MB^2 - MW^2)*((3*CKM1x3*ee^2*MB^2*conj(CKM1x3))/(2. *sw^2) + (3*CKM1x3*ee^2*MB^4*conj(CKM1x3))/(2. *MW^2*sw^2) - (3*CKM1x3*ee^2*MW^2*conj(CKM1x3))/sw^2))/(96. *pi*abs(MB)^3)", (Particles.W__minus__, Particles.c) => "(((3*CKM2x3*ee^2*MB^2*conj(CKM2x3))/(2. *sw^2) + (3*CKM2x3*ee^2*MC^2*conj(CKM2x3))/(2. *sw^2) + (3*CKM2x3*ee^2*MB^4*conj(CKM2x3))/(2. *MW^2*sw^2) - (3*CKM2x3*ee^2*MB^2*MC^2*conj(CKM2x3))/(MW^2*sw^2) + (3*CKM2x3*ee^2*MC^4*conj(CKM2x3))/(2. *MW^2*sw^2) - (3*CKM2x3*ee^2*MW^2*conj(CKM2x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MC^2 + MC^4 - 2*MB^2*MW^2 - 2*MC^2*MW^2 + MW^4))/(96. *pi*abs(MB)^3)", (Particles.W__minus__, Particles.t) => "(((3*CKM3x3*ee^2*MB^2*conj(CKM3x3))/(2. *sw^2) + (3*CKM3x3*ee^2*MT^2*conj(CKM3x3))/(2. *sw^2) + (3*CKM3x3*ee^2*MB^4*conj(CKM3x3))/(2. *MW^2*sw^2) - (3*CKM3x3*ee^2*MB^2*MT^2*conj(CKM3x3))/(MW^2*sw^2) + (3*CKM3x3*ee^2*MT^4*conj(CKM3x3))/(2. *MW^2*sw^2) - (3*CKM3x3*ee^2*MW^2*conj(CKM3x3))/sw^2)*sqrt(MB^4 - 2*MB^2*MT^2 + MT^4 - 2*MB^2*MW^2 - 2*MT^2*MW^2 + MW^4))/(96. *pi*abs(MB)^3)"))
Decay_e__minus__ = Decay(name = "Decay_e__minus__", particle = Particles.e__minus__, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.ve) => "((Me^2 - MW^2)*((ee^2*Me^2)/(2. *sw^2) + (ee^2*Me^4)/(2. *MW^2*sw^2) - (ee^2*MW^2)/sw^2))/(32. *pi*abs(Me)^3)"))
Decay_mu__minus__ = Decay(name = "Decay_mu__minus__", particle = Particles.mu__minus__, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.vm) => "((MM^2 - MW^2)*((ee^2*MM^2)/(2. *sw^2) + (ee^2*MM^4)/(2. *MW^2*sw^2) - (ee^2*MW^2)/sw^2))/(32. *pi*abs(MM)^3)"))
Decay_ta__minus__ = Decay(name = "Decay_ta__minus__", particle = Particles.ta__minus__, partial_widths = Dict{Tuple, String}((Particles.W__minus__, Particles.vt) => "((MTA^2 - MW^2)*((ee^2*MTA^2)/(2. *sw^2) + (ee^2*MTA^4)/(2. *MW^2*sw^2) - (ee^2*MW^2)/sw^2))/(32. *pi*abs(MTA)^3)"))

all_decays = (
    Decay_H = Decay_H,
    Decay_Z = Decay_Z,
    Decay_c = Decay_c,
    Decay_t = Decay_t,
    Decay_W__plus__ = Decay_W__plus__,
    Decay_b = Decay_b,
    Decay_e__minus__ = Decay_e__minus__,
    Decay_mu__minus__ = Decay_mu__minus__,
    Decay_ta__minus__ = Decay_ta__minus__
)

end # Decays